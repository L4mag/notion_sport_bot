# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: ['master']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Install dependencies
        run: npm install
      - name: Create config
        env:
          TEST_CONFIG: ${{ secrets.TEST_CONFIG }}
        run: mkdir ./config && touch ./config/default.json && echo $TEST_CONFIG >> ./config/default.json
      - name: Check config
        run: cat ./config/default.json
      - name: Run app start
        run: npm start

  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Job that need to be completed for the run of this job
    needs: [build]
    steps:
      - name: ssh pipelines
        uses: cross-the-world/ssh-pipeline@master
        env:
          WELCOME: 'ssh pipelines test start'
          LASTSSH: 'ssh pipelines test end'
          DIR: 'notion_sport_bot'
          GITLINK: 'https://github.com/L4mag/notion_sport_bot'
        with:
          host: ${{ secrets.HOST }}
          user: ${{ secrets.USERNAME }}
          pass: ${{ secrets.PASSWORD }}
          connect_timeout: 10s
          # Cloning repo if project directory doesn't exists, fetching, installing npm dependencies and testing project
          script: |
            echo $WELCOME; cd ~/github; [ ! -d $DIR ] && echo "Directory $DIR DOES NOT exists." && git clone $GITLINK; cd $DIR && git fetch && ls && npm i && npm run test && echo $LASTSSH;
